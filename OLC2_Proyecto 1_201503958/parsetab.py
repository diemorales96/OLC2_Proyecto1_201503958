
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightUNOTleftMENORQUEMAYORQUEIGUALIGUALDIFERENTEMENORIGUALMAYORIGUALleftMASMENOSleftDIVPORMODnonassocPOTrightUMENOSAND CADENA CARACTER COMA DECIMAL DIFERENTE DIV DOBLEDPUNTOS DOSPUNTOS ENTERO ID IGUAL IGUALIGUAL MAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MOD NOT OR PARA PARC POR POT PUNTOCOMA RBOOLEAN RBREAK RCHAR RCONTINUE RDOUBLE RELSE RELSEIF REND RFALSE RFOR RIF RIN RINT RNULO RPARSE RPRINT RPRINTLN RSTRING RTRUE RWHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion      : imprimir_instr finins\n                        | imprimir_ins finins\n                        | declaracion finins\n                        | if_instr finins\n                        | while_instr finins\n                        | for_instr finins\n                        | break_instr finins\n                        | continue_instr\n    finins       : PUNTOCOMAinstruccion        : error PUNTOCOMAimprimir_instr     : RPRINTLN PARA expresion PARCimprimir_ins     : RPRINT PARA expresion PARC declaracion     : declaracion_instr_completa\n                        | declaracion_instr_simple\n    if_instr     : RIF expresion instrucciones REND\n    if_instr     : RIF expresion instrucciones RELSE instrucciones REND\n    if_instr      : RIF expresion instrucciones elseif_instr RELSE instrucciones REND\n    elseif_instr     : elseif_instr elseif_instruction\n    elseif_instr     : elseif_instruction\n    elseif_instruction   : RELSEIF expresion instrucciones \n    while_instr : RWHILE expresion instrucciones REND\n    for_instr    : RFOR ID RIN expresion DOSPUNTOS expresion instrucciones REND\n    for_instr    : RFOR ID RIN expresion instrucciones REND\n    break_instr  : RBREAK\n    continue_instr   : RCONTINUE\n     declaracion_instr_simple     : ID IGUAL expresion\n    declaracion_instr_completa   : ID IGUAL expresion DOBLEDPUNTOS tipo\n    tipo     : RINT\n                | RDOUBLE\n                | RCHAR\n                | RSTRING\n                | RBOOLEAN \n    expresion   : expresion MAS expresion\n                | expresion MENOS expresion\n                | expresion POR expresion\n                | expresion DIV expresion\n                | expresion POT expresion\n                | expresion MOD expresion\n                | expresion MENORQUE expresion\n                | expresion MAYORQUE expresion\n                | expresion MENORIGUAL expresion\n                | expresion MAYORIGUAL expresion\n                | expresion IGUALIGUAL expresion\n                | expresion DIFERENTE expresion\n                | expresion OR expresion\n                | expresion AND expresion\n                | expresion COMA expresion\n    \n    expresion : MENOS expresion %prec UMENOS\n              | NOT expresion %prec UNOT \n    \n    expresion   : PARA expresion PARC\n    expresion : IDexpresion : ENTEROexpresion : DECIMALexpresion : CADENAexpresion : CARACTERexpresion : RTRUEexpresion : RFALSEexpresion : RPARSE PARA tipo COMA expresion PARC\n    '
    
_lr_action_items = {'error':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[12,12,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,12,-54,-55,-56,-57,-58,-59,-60,12,12,-51,-52,12,12,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,12,12,12,12,12,12,12,12,-61,12,]),'RPRINTLN':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[13,13,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,13,-54,-55,-56,-57,-58,-59,-60,13,13,-51,-52,13,13,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,13,13,13,13,13,13,13,13,-61,13,]),'RPRINT':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[14,14,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,14,-54,-55,-56,-57,-58,-59,-60,14,14,-51,-52,14,14,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,14,14,14,14,14,14,14,14,-61,14,]),'RIF':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[17,17,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,17,-54,-55,-56,-57,-58,-59,-60,17,17,-51,-52,17,17,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,17,17,17,17,17,17,17,17,-61,17,]),'RWHILE':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[18,18,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,18,-54,-55,-56,-57,-58,-59,-60,18,18,-51,-52,18,18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,18,18,18,18,18,18,18,18,-61,18,]),'RFOR':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[19,19,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,19,-54,-55,-56,-57,-58,-59,-60,19,19,-51,-52,19,19,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,19,19,19,19,19,19,19,19,-61,19,]),'RBREAK':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[21,21,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,21,-54,-55,-56,-57,-58,-59,-60,21,21,-51,-52,21,21,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,21,21,21,21,21,21,21,21,-61,21,]),'RCONTINUE':([0,2,3,11,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,45,47,52,68,69,72,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,113,116,117,119,122,123,],[22,22,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,22,-54,-55,-56,-57,-58,-59,-60,22,22,-51,-52,22,22,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,22,22,22,22,22,22,22,22,-61,22,]),'ID':([0,2,3,11,17,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,107,108,110,111,112,113,116,117,119,122,123,],[20,20,-3,-11,39,39,48,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,39,39,20,39,39,39,-54,-55,-56,-57,-58,-59,-60,20,39,20,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-51,-52,20,39,20,39,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,20,20,20,20,39,39,20,20,20,20,-61,20,]),'$end':([1,2,3,11,22,23,24,25,26,27,28,29,30,31,32,],[0,-1,-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,]),'REND':([3,11,22,23,24,25,26,27,28,29,30,31,32,52,72,107,113,116,123,],[-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,77,104,115,120,121,124,]),'RELSE':([3,11,22,23,24,25,26,27,28,29,30,31,32,52,79,80,109,117,],[-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,78,108,-22,-21,-23,]),'RELSEIF':([3,11,22,23,24,25,26,27,28,29,30,31,32,52,79,80,109,117,],[-3,-11,-28,-2,-4,-12,-5,-6,-7,-8,-9,-10,-13,81,81,-22,-21,-23,]),'PUNTOCOMA':([4,5,6,7,8,9,10,12,15,16,21,39,40,41,42,43,44,45,68,69,74,75,76,77,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,114,115,120,121,122,124,],[25,25,25,25,25,25,25,32,-16,-17,-27,-54,-55,-56,-57,-58,-59,-60,-51,-52,-29,-14,-15,-18,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,-31,-32,-33,-34,-35,-24,-30,-19,-26,-20,-61,-25,]),'PARA':([13,14,17,18,33,34,36,37,38,46,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[33,34,38,38,38,38,38,38,38,71,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'MENOS':([17,18,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,111,112,118,119,122,],[36,36,36,36,54,36,36,36,-54,-55,-56,-57,-58,-59,-60,54,36,54,54,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-51,54,54,36,54,36,-36,-37,-38,-39,-40,-41,54,54,54,54,54,54,54,54,54,-53,54,54,36,36,54,54,-61,]),'NOT':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ENTERO':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'DECIMAL':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'CADENA':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'CARACTER':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'RTRUE':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'RFALSE':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RPARSE':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'IGUAL':([20,],[49,]),'MAS':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[53,-54,-55,-56,-57,-58,-59,-60,53,53,53,-51,53,53,53,-36,-37,-38,-39,-40,-41,53,53,53,53,53,53,53,53,53,-53,53,53,53,53,-61,]),'POR':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[55,-54,-55,-56,-57,-58,-59,-60,55,55,55,-51,55,55,55,55,55,-38,-39,-40,-41,55,55,55,55,55,55,55,55,55,-53,55,55,55,55,-61,]),'DIV':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[56,-54,-55,-56,-57,-58,-59,-60,56,56,56,-51,56,56,56,56,56,-38,-39,-40,-41,56,56,56,56,56,56,56,56,56,-53,56,56,56,56,-61,]),'POT':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[57,-54,-55,-56,-57,-58,-59,-60,57,57,57,-51,57,57,57,57,57,57,57,None,57,57,57,57,57,57,57,57,57,57,-53,57,57,57,57,-61,]),'MOD':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[58,-54,-55,-56,-57,-58,-59,-60,58,58,58,-51,58,58,58,58,58,-38,-39,-40,-41,58,58,58,58,58,58,58,58,58,-53,58,58,58,58,-61,]),'MENORQUE':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[59,-54,-55,-56,-57,-58,-59,-60,59,59,59,-51,59,59,59,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,59,59,59,-53,59,59,59,59,-61,]),'MAYORQUE':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[60,-54,-55,-56,-57,-58,-59,-60,60,60,60,-51,60,60,60,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,60,60,60,-53,60,60,60,60,-61,]),'MENORIGUAL':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[61,-54,-55,-56,-57,-58,-59,-60,61,61,61,-51,61,61,61,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,61,61,61,-53,61,61,61,61,-61,]),'MAYORIGUAL':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[62,-54,-55,-56,-57,-58,-59,-60,62,62,62,-51,62,62,62,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,62,62,62,-53,62,62,62,62,-61,]),'IGUALIGUAL':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[63,-54,-55,-56,-57,-58,-59,-60,63,63,63,-51,63,63,63,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,63,63,63,-53,63,63,63,63,-61,]),'DIFERENTE':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[64,-54,-55,-56,-57,-58,-59,-60,64,64,64,-51,64,64,64,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,64,64,64,-53,64,64,64,64,-61,]),'OR':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[65,-54,-55,-56,-57,-58,-59,-60,65,65,65,-51,-52,65,65,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,65,-53,65,65,65,65,-61,]),'AND':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,110,118,119,122,],[66,-54,-55,-56,-57,-58,-59,-60,66,66,66,-51,-52,66,66,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,66,-49,66,-53,66,66,66,66,-61,]),'COMA':([35,39,40,41,42,43,44,45,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,110,118,119,122,],[67,-54,-55,-56,-57,-58,-59,-60,67,67,67,-51,-52,67,67,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,67,-53,111,-31,-32,-33,-34,-35,67,67,67,67,-61,]),'PARC':([39,40,41,42,43,44,45,50,51,68,69,70,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,118,122,],[-54,-55,-56,-57,-58,-59,-60,75,76,-51,-52,97,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,122,-61,]),'DOBLEDPUNTOS':([39,40,41,42,43,44,45,68,69,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,122,],[-54,-55,-56,-57,-58,-59,-60,-51,-52,106,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,-61,]),'DOSPUNTOS':([39,40,41,42,43,44,45,68,69,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,122,],[-54,-55,-56,-57,-58,-59,-60,-51,-52,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,112,-61,]),'RIN':([48,],[73,]),'RINT':([71,106,],[99,99,]),'RDOUBLE':([71,106,],[100,100,]),'RCHAR':([71,106,],[101,101,]),'RSTRING':([71,106,],[102,102,]),'RBOOLEAN':([71,106,],[103,103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,35,47,78,105,108,110,119,],[2,52,72,107,113,116,117,123,]),'instruccion':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[3,23,3,3,23,23,3,3,23,3,3,23,23,23,3,23,]),'imprimir_instr':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'imprimir_ins':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declaracion':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_instr':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'while_instr':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_instr':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'break_instr':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'continue_instr':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'declaracion_instr_completa':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declaracion_instr_simple':([0,2,35,47,52,72,78,105,107,108,110,113,116,117,119,123,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'finins':([4,5,6,7,8,9,10,],[24,26,27,28,29,30,31,]),'expresion':([17,18,33,34,36,37,38,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,81,111,112,],[35,47,50,51,68,69,70,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,110,118,119,]),'elseif_instr':([52,],[79,]),'elseif_instruction':([52,79,],[80,109,]),'tipo':([71,106,],[98,114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',186),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','grammar.py',190),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',196),
  ('instruccion -> imprimir_instr finins','instruccion',2,'p_instruccion','grammar.py',203),
  ('instruccion -> imprimir_ins finins','instruccion',2,'p_instruccion','grammar.py',204),
  ('instruccion -> declaracion finins','instruccion',2,'p_instruccion','grammar.py',205),
  ('instruccion -> if_instr finins','instruccion',2,'p_instruccion','grammar.py',206),
  ('instruccion -> while_instr finins','instruccion',2,'p_instruccion','grammar.py',207),
  ('instruccion -> for_instr finins','instruccion',2,'p_instruccion','grammar.py',208),
  ('instruccion -> break_instr finins','instruccion',2,'p_instruccion','grammar.py',209),
  ('instruccion -> continue_instr','instruccion',1,'p_instruccion','grammar.py',210),
  ('finins -> PUNTOCOMA','finins',1,'p_finins','grammar.py',215),
  ('instruccion -> error PUNTOCOMA','instruccion',2,'p_instruccion_error','grammar.py',219),
  ('imprimir_instr -> RPRINTLN PARA expresion PARC','imprimir_instr',4,'p_imprimir','grammar.py',224),
  ('imprimir_ins -> RPRINT PARA expresion PARC','imprimir_ins',4,'p_imprimir2','grammar.py',228),
  ('declaracion -> declaracion_instr_completa','declaracion',1,'p_declaracion','grammar.py',232),
  ('declaracion -> declaracion_instr_simple','declaracion',1,'p_declaracion','grammar.py',233),
  ('if_instr -> RIF expresion instrucciones REND','if_instr',4,'p_if1','grammar.py',238),
  ('if_instr -> RIF expresion instrucciones RELSE instrucciones REND','if_instr',6,'p_if2','grammar.py',244),
  ('if_instr -> RIF expresion instrucciones elseif_instr RELSE instrucciones REND','if_instr',7,'p_if3','grammar.py',250),
  ('elseif_instr -> elseif_instr elseif_instruction','elseif_instr',2,'p_elsif','grammar.py',255),
  ('elseif_instr -> elseif_instruction','elseif_instr',1,'p_elseif_instr','grammar.py',262),
  ('elseif_instruction -> RELSEIF expresion instrucciones','elseif_instruction',3,'p_elseif_instruction','grammar.py',270),
  ('while_instr -> RWHILE expresion instrucciones REND','while_instr',4,'p_while','grammar.py',277),
  ('for_instr -> RFOR ID RIN expresion DOSPUNTOS expresion instrucciones REND','for_instr',8,'p_for','grammar.py',282),
  ('for_instr -> RFOR ID RIN expresion instrucciones REND','for_instr',6,'p_for2','grammar.py',287),
  ('break_instr -> RBREAK','break_instr',1,'p_break','grammar.py',292),
  ('continue_instr -> RCONTINUE','continue_instr',1,'p_continue','grammar.py',298),
  ('declaracion_instr_simple -> ID IGUAL expresion','declaracion_instr_simple',3,'p_declaracion_simple','grammar.py',304),
  ('declaracion_instr_completa -> ID IGUAL expresion DOBLEDPUNTOS tipo','declaracion_instr_completa',5,'p_declaracion_completa','grammar.py',309),
  ('tipo -> RINT','tipo',1,'p_tipo','grammar.py',315),
  ('tipo -> RDOUBLE','tipo',1,'p_tipo','grammar.py',316),
  ('tipo -> RCHAR','tipo',1,'p_tipo','grammar.py',317),
  ('tipo -> RSTRING','tipo',1,'p_tipo','grammar.py',318),
  ('tipo -> RBOOLEAN','tipo',1,'p_tipo','grammar.py',319),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',335),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',336),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',337),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','grammar.py',338),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion_binaria','grammar.py',339),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','grammar.py',340),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',341),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',342),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',343),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',344),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',345),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_binaria','grammar.py',346),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',347),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',348),
  ('expresion -> expresion COMA expresion','expresion',3,'p_expresion_binaria','grammar.py',349),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',384),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','grammar.py',385),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_agrupacion','grammar.py',394),
  ('expresion -> ID','expresion',1,'p_expresion_identificador','grammar.py',400),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','grammar.py',404),
  ('expresion -> DECIMAL','expresion',1,'p_primitivo_decimal','grammar.py',408),
  ('expresion -> CADENA','expresion',1,'p_primitivo_cadena','grammar.py',412),
  ('expresion -> CARACTER','expresion',1,'p_primitivo_caracter','grammar.py',416),
  ('expresion -> RTRUE','expresion',1,'p_primitivo_true','grammar.py',420),
  ('expresion -> RFALSE','expresion',1,'p_primitivo_false','grammar.py',424),
  ('expresion -> RPARSE PARA tipo COMA expresion PARC','expresion',6,'p_expresion_cast','grammar.py',428),
]
